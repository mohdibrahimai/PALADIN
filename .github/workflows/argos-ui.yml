name: argos-ui

on:
  push:
    branches: ['**']
  pull_request: {}

jobs:
  ui:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Detect UI directory
        id: detect
        shell: bash
        run: |
          set -e
          if   [ -f "ui/package.json" ]; then echo "UI_DIR=ui"           >> $GITHUB_ENV
          elif [ -f "apps/ui/package.json" ]; then echo "UI_DIR=apps/ui" >> $GITHUB_ENV
          elif [ -f "frontend/package.json" ]; then echo "UI_DIR=frontend" >> $GITHUB_ENV
          elif [ -f "package.json" ]; then echo "UI_DIR=."               >> $GITHUB_ENV
          else
            echo "SKIP_UI=true" >> $GITHUB_ENV
          fi

      - name: Skip if no UI present
        if: env.SKIP_UI == 'true'
        run: |
          echo "No package.json found at repo root or in ui/, apps/ui/, frontend/."
          echo "Skipping UI build/test gracefully to satisfy required check."

      - name: Install deps (auto-detect package manager)
        if: env.SKIP_UI != 'true'
        shell: bash
        working-directory: ${{ env.UI_DIR }}
        run: |
          set -e
          if [ -f "pnpm-lock.yaml" ]; then
            corepack enable
            pnpm install --frozen-lockfile
          elif [ -f "yarn.lock" ]; then
            corepack enable
            yarn install --frozen-lockfile
          elif [ -f "package-lock.json" ]; then
            npm ci
          else
            npm install
          fi

      - name: Build
        if: env.SKIP_UI != 'true'
        working-directory: ${{ env.UI_DIR }}
        run: npm run build --if-present

      - name: Test
        if: env.SKIP_UI != 'true'
        working-directory: ${{ env.UI_DIR }}
        run: npm test --if-present
